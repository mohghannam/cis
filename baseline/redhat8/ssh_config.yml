---
- hosts: os
  name: This is for configuring SSH for Redhat Enterprise linux Server 7.0
  tasks:
  - name: set required perms on /etc/ssh/sshd_config
    copy: 
      src: /etc/ssh/sshd_config
      dest: /usr/share/cis
      remote_src: yes
  - file:
       path: /etc/ssh/sshd_config
       owner: root
       group: root
       mode: '0600'
  
  - name: Ensure SSH Protocol is set to 2
    shell: grep "^Protocol" /etc/ssh/sshd_config
    register: proto_check
    ignore_errors: yes
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: Protocol 2
       insertafter: yes
       state: present
    when: proto_check.stdout == ""

  - name: Ensure SSH HostbasedAuthentication is disabled
    shell: grep "^HostbasedAuthentication" /etc/ssh/sshd_config
    register: host_based_check
    ignore_errors: yes
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: HostbasedAuthentication no
      insertafter: yes
      state: present
    when: host_based_check.stdout == ""

  - name: Ensure SSH AllowTcpForwarding is disable
    shell: grep "AllowTcpForwarding yes" /etc/ssh/sshd_config
    register: tcp_forward_check
    ignore_errors: yes
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: AllowTcpForwarding no
      insertafter: yes
      state: present
    when: tcp_forward_check.stdout != ""


  - name: Ensure SSH LogLevel is set to INFO
    shell: grep "^LogLevel" /etc/ssh/sshd_config
    register: log_level
    ignore_errors: yes
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: LogLevel INFO
       insertafter: yes
       state: present
    when: log_level.stdout == ""
  
  - name: Ensure SSH X11 forwarding is disabled
    lineinfile:
       path: /etc/ssh/sshd_config
       regexp: "^X11Forwarding"
       state: absent
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: X11Forwarding no
       state: present
       insertafter: yes

  - name: Ensure SSH MaxAuthTries is set to 4 or less
    shell: grep "^MaxAuthTries" /etc/ssh/sshd_config
    register: max_auth 
    ignore_errors: yes
  - lineinfile: 
        path: /etc/ssh/sshd_config
        line: MaxAuthTries 4
        state: present
        insertafter: yes
    when: max_auth.stdout == ""
  
  - name: Ensure SSH IgnoreRhosts is enabled
    shell: grep "^IgnoreRhosts" /etc/ssh/sshd_config
    register: ignore_hosts
    ignore_errors: yes
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: IgnoreRhosts yes
      state: present
      insertafter: yes
    when: ignore_hosts.stdout == ""

  #- name: Ensure SSH root login is disabled
  #  shell: grep "^PermitRootLogin" /etc/ssh/sshd_config
  #  register: permit_root
  #  ignore_errors: yes
###############
#NOTE: YOU WOULD PROBABLY LOSE THE CONNECTION IF U USE ROOT AS A USER
##############
  #- debug: 
  #     msg: "Disable root permission for logining through SSH"
  #- lineinfile: 
  #     path: /etc/ssh/sshd_config
  #     line: PermitRootLogin no
  #     state: present
  #     insertafter: yes
  #  when: permit_root.stdout == 
  - name: Ensure SSH PermitEmptyPasswords is disabled
    shell: grep "^PermitEmptyPasswords" /etc/ssh/sshd_config 
    register: empty_passwd
    ignore_errors: yes
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: PermitEmptyPasswords no
       state: present
       insertafter: yes
    when: empty_passwd.stdout == ""
  - name: Ensure SSH PermitUserEnvironment is disabled
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "PermitUserEnvironment"
      state: absent 
  - lineinfile: 
      path: /etc/ssh/sshd_config
      line: PermitUserEnvironment no
      state: present
      insertafter: yes

  - name: Ensure only approved MAC algorithms are used
    shell: grep "MACs" /etc/ssh/sshd_config
    register: approved_mac
    ignore_errors: yes
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
       state: present
       insertafter: yes
    when: approved_mac.stdout == ""

  - name: Ensure SSH Idle Timeout Interval is configured
    shell: grep "^ClientAliveInterval 300" /etc/ssh/sshd_config
    register: client_alive
    ignore_errors: yes
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: ClientAliveInterval
       state: absent
    when: client_alive.stdout != ""
  - lineinfile:
       path: /etc/ssh/sshd_config
       line: ClientAliveInterval 300
       state: present 
       insertafter: yes
  - shell: grep "^ClientAliveCountMax 0" /etc/ssh/sshd_config
    register: count_max
    ignore_errors: yes
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: ClientAliveCountMax
      state: absent
    when: count_max.stdout != ""
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: ClientAliveCountMax 0
      state: present
      insertafter: yes
  
  - name: Ensure SSH LoginGraceTime is set to one minute or less
    shell: grep "^LoginGraceTime" /etc/ssh/sshd_config
    register: login_grace_time
    ignore_errors: yes
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: LoginGraceTime 60
      state: present 
      insertafter: yes
    when: login_grace_time.stdout == ""
   
  - name: nsure SSH warning banner is configured
    shell: grep "^Banner" /etc/ssh/sshd_config
    register: banner   
    ignore_errors: yes
  - lineinfile: 
       path: /etc/ssh/sshd_config
       line: Banner /etc/issue.net
       state: present
       insertafter: yes
    when: banner.stdout == ""
  
  - name: Configure PAM
    copy: 
     src: /etc/pam.d/password-auth
     dest: /usr/share/cis
     remote_src: yes
  
  - shell:  grep pam_pwquality.so /etc/pam.d/password-auth
    register: pam_con
    ignore_errors: yes
  - lineinfile: 
       path: /etc/pam.d/password-auth
       line: password requisite pam_pwquality.so try_first_pass retry=3
       state: present
       insertafter: yes
    when: pam_con.stdout == ""
  
  
  - copy:
     src: /etc/security/pwquality.conf
     dest: /usr/share/cis
     remote_src: yes

  - shell: grep ^minlen /etc/security/pwquality.conf
    register: minlen
    ignore_errors: yes
  - lineinfile: 
       path: /etc/security/pwquality.conf
       line : minlen = 14
       state: present
       insertafter: yes
    when: minlen.stdout == ""

  - shell: grep ^dcredit /etc/security/pwquality.conf
    register: dcredit
    ignore_errors: yes
  - lineinfile:
       path: /etc/security/pwquality.conf
       line: dcredit = -1
       state: present
       insertafter: yes
    when: dcredit.stdout == ""
  
  - shell: grep ^lcredit /etc/security/pwquality.conf
    register: lcredit
    ignore_errors: yes
  - lineinfile:
       path: /etc/security/pwquality.conf
       line: lcredit = -1
       state: present
       insertafter: yes
    when: lcredit.stdout == ""

  - shell: grep ^ocredit /etc/security/pwquality.conf
    register: ocredit
    ignore_errors: yes
  - lineinfile:
       path: /etc/security/pwquality.conf
       line: ocredit = -1
       state: present
       insertafter: yes
    when: ocredit.stdout == ""
   

  - shell: grep ^ucredit /etc/security/pwquality.conf
    register: ucredit
    ignore_errors: yes
  - lineinfile:
       path: /etc/security/pwquality.conf
       line: ucredit = -1
       state: present
       insertafter: yes
    when: ucredit.stdout == ""

#######################
#PASSWORD CONFIGURATION
#######################
  - name: Ensure lockout for failed password attempts is configured
    blockinfile:
       path: /etc/pam.d/password-auth
       state: present
       content: |
             auth        required      pam_faillock.so preauth audit silent deny=5 unlock_time=900
             auth        [success=1 default=bad]   pam_unix.so
             auth        [default=die]    pam_faillock.so authfail audit deny=5 unlock_time=900
             auth        sufficient    pam_faillock.so authsucc audit deny=5 unlock_time=900
  - name: back-up /etc/pam.d/system-auth
    copy: 
      src: /etc/pam.d/system-auth
      dest: /usr/share/cis
      remote_src: yes  

  - blockinfile:
      path: /etc/pam.d/system-auth
      state: present
      content: |
          auth        required      pam_faillock.so preauth audit silent deny=5 unlock_time=900
          auth        [success=1 default=bad]   pam_unix.so
          auth        [default=die]    pam_faillock.so authfail audit deny=5 unlock_time=900
          auth        sufficient    pam_faillock.so authsucc audit deny=5 unlock_time=900

  - name: Ensure password reuse is limited
    lineinfile:
       path: /etc/pam.d/password-auth
       line: password sufficient pam_unix.so remember=5
       state: present
       insertafter: yes

  - lineinfile:
       path: /etc/pam.d/system-auth
       line: password sufficient pam_unix.so remember=5
       state: present
       insertafter: yes

  - name: Ensure password hashing algorithm is SHA-512
    shell:  egrep '^password\s+sufficient\s+pam_unix.so' /etc/pam.d/password-auth
    register: hash_alg
    ignore_errors: yes
  
  - lineinfile: 
      path: /etc/pam.d/password-auth
      line:  password sufficient pam_unix.so sha512
      state: present
      insertafter: yes
    when: hash_alg.stdout == ""
  - shell: egrep '^password\s+sufficient\s+pam_unix.so' /etc/pam.d/system-auth 
    register: hash_algo_2
    ignore_errors: yes
  - lineinfile: 
      path: /etc/pam.d/system-auth
      line: password sufficient pam_unix.so sha512
      state: present
      insertafter: yes
    when: hash_algo_2.stdout == ""
  
  - name: Set Shadow Password Suite Parameters
    copy:
      src: /etc/login.defs
      dest: /usr/share/cis
      remote_src: yes
  
  - name: Ensure password expiration is 365 days or less (Scored)
    lineinfile:
       path: /etc/login.defs
       regexp: '^PASS_MAX_DAYS'
       state: absent
  - lineinfile:
       path: /etc/login.defs
       line: PASS_MAX_DAYS 90
       state: present
  
  - name: Ensure minimum days between password changes is 7 or more
    lineinfile:
       path: /etc/login.defs
       regexp: '^PASS_MIN_DAYS'
       state: absent
  - lineinfile:
       path: /etc/login.defs
       line: PASS_MIN_DAYS 7
       state: present
  
  - name: Ensure password expiration warning days is 7 or more
    lineinfile:
       path: /etc/login.defs
       regexp: '^PASS_WARN_AGE'
       state: absent
  - lineinfile:
       path: /etc/login.defs
       line: PASS_WARN_AGE 7
       state: present
  
  - name: Ensure inactive password lock is 30 days or less
    shell: useradd -D -f 30

  - name: Ensure default group for the root account is GID 0
    copy:
      src: /etc/passwd
      dest: /usr/share/cis
      remote_src: yes

  - shell:  'grep "^root:" /etc/passwd | cut -f4 -d:'
    register: default_grp
    ignore_errors: yes
  - shell:  usermod -g 0 root
    when: default_grp.stdout == ""
 
  - name: Ensure default user umask is 027 or more restrictive
    copy: 
      src: /etc/bashrc
      dest: /usr/share/cis
      remote_src: yes
   
  - lineinfile:
      path: /etc/bashrc
      line: umask 027
      state: present
      insertafter: yes

  - copy:
      src: /etc/profile
      dest: /usr/share/cis
      remote_src: yes
  - shell:  grep "umask" /etc/profile
    register: mask_ch
    ignore_errors: yes
  - lineinfile:
      path: /etc/profile
      state: present
      line: umask 027
      insertafter: yes
    when: mask_ch.stdout == ""

  - name: Ensure default user shell timeout is 900 seconds or less
    shell: grep "^TMOUT" /etc/bashrc
    register: timeout_ch
    ignore_errors: yes
  - lineinfile:
      path: /etc/bashrc
      line: TMOUT=600
      state: present
      insertafter: yes
    when: timeout_ch.stdout == ""
  - shell: grep "^TMOUT" /etc/profile
    register: timout_ch2
    ignore_errors: yes
  - lineinfile: 
      path: /etc/profile
      line: TMOUT=600
      state: present
      insertafter: yes
    when: timout_ch2.stdout == ""

  - name: Ensure access to the su command is restricted
    copy:
      src: /etc/pam.d/su
      dest: /usr/share/cis
      remote_src: yes
  
  - lineinfile:
       path: /etc/pam.d/su
       regexp: "auth    required        pam_wheel.so    use_uid"
       state: absent
  - lineinfile:
       path: /etc/pam.d/su
       line: auth     required    pam_wheel.so  use_uid
       state: present
  
  - name: Ensure permissions on /etc/passwd are configured     
    file:
      path: /etc/passwd
      owner: root
      group: root
      mode: '644'

  - name: Ensure permissions on /etc/shadow are configured
    file: 
     path: /etc/shadow
     owner: root
     group: root
     mode: '000'

  - name: Ensure permissions on /etc/group are configured
    file:
      path: /etc/group
      owner: root
      group: root
      mode: '644'
  - name: Ensure permissions on /etc/gshadow are configured
    file: 
      path: /etc/gshadow
      owner: root
      group: root
      mode: 000

  - name: Ensure permissions on /etc/passwd- are configured
    file:
      path: /etc/passwd-
      owner: root
      group: root
      mode: '0644'
  
  - name: Ensure permissions on /etc/shadow- are configured
    file: 
      path: /etc/shadow-
      owner: root
      group: root
      mode: '000'

  - name: Ensure permissions on /etc/group- are configured
    file:
      path: /etc/group-
      owner: root
      group: root
      mode: '0644'

  - name: nsure permissions on /etc/gshadow- are configured
    file: 
      path: /etc/gshadow-
      owner: root
      group: root
      mode: '000'
