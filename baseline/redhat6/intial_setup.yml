---
- hosts: test 
  name: Intial setup 
  tasks:
  - name: Needed configuration for Roll-Back
    file:
      path: /usr/share/cis
      state: directory
      owner: root
      group: root
      mode: '0744'
  - file:
      path: /usr/share/cis/tasks-status.yml
      owner: root
      group: root
      mode: '0644'
      state: touch
  - shell: "> /usr/share/cis/tasks-status.yml"


  - name: isntalling "libselinux-python"
    yum:
      name: libselinux-python
      state: present
  - name: setting selinux
    copy:
      src: /etc/selinux/config
      dest: /usr/share/cis
      force: no


  - name: Ensure selinux is enforcing
    selinux:
     policy: targeted
     state: enforcing

  - name: setting sysconfig/init
    copy:
      src: /etc/sysconfig/init
      dest: /usr/share/cis
      force: no

  - name: Ensure authentication for single user mode
    copy:
     src: /etc/sysconfig/init
     dest: /usr/share/cis/
     force: no
  - shell: grep 'SINGLE=/sbin/sulogin' /etc/sysconfig/init
    register: check
    ignore_errors: yes
  - name: configuring /etc/sysconfig/init
    lineinfile:
     path: /etc/sysconfig/init
     regexp: '^SINGLE='
     line: SINGLE=/sbin/sulogin
     insertafter: yes
     state: present
    when: check.stdout == ""

  - name: Ensure interactive boot is not enabled
    shell: grep 'PROMPT=no' /etc/sysconfig/init
    register: prompt_check
    ignore_errors: yes
  - name: configuring /etc/sysconfig/init
    lineinfile:
     path: /etc/sysconfig/init
     regexp: '^PROMPT='
     line: PROMPT=no
     insertafter: yes
     state: present
    when: prompt_check.stdout == ""


  - name: reconfiguring /etc/security/limits.conf
    copy:
      src: /etc/security/limits.conf
      dest: /usr/share/cis
      force: no
  - lineinfile:
      path: /etc/security/limits.conf
      line: "* hard core 0"
      state: present
      insertafter: yes

  - name: checking kernel param kernel.randomize_va_space
    shell: sysctl -a | grep "kernel.randomize_va_space = 2"
    register: check_2
    ignore_errors: yes

  - debug:
      msg: "the param is not defined properly {{ check_2 }}"
    when: check_2 is not defined

  - name: configure kernel param  kernel.randomize_va_space
    sysctl:
     name: kernel.randomize_va_space
     value: 2
     sysctl_set: yes
    when: check_2 is not defined

  - name: Check grub file exists
    stat:
     path: /boot/grub/grub.conf
    register: stat_result
  - copy:
     src: /boot/grub/grub.conf
     dest: /usr/share/cis
     force: no
     remote_src: yes
    when: stat_result.stat.exists == True

  - name: setting required permission on grub
    file:
      path: /boot/grub/grub.conf
      owner: root
      group: root
      mode: '0600'
    when: stat_result.stat.exists == True
    register: result_4
  
  - name: Ensure selinux not disabled in bootloader
    shell: grep '^\s*kernel.*selinux=0.*' /boot/grub/grub.conf
    ignore_errors: yes
    register: se_status
  - name: remove selinux=0
    shell: sed -i "s/selinux=0//g" /boot/grub/grub.conf
    when: se_status != ''
 

  - name: verify /etc/issue has no /r /m /s
    copy:
      src: /etc/issue
      dest: /usr/share/cis
      force: no
  - shell:   egrep '(\\v|\\r|\\m|\\s)' /etc/issue
    register: check_issue
    ignore_errors: yes

  - name: reconfigure /etc/issue
    shell: echo "All activities performed on this system will be monitored." > /etc/issue
    when: check_issue.stdout != ""


  - name: verify /etc/issue.net has no /r /m /s
    copy:
     src: /etc/issue.net
     dest: /usr/share/cis
     force: no
  - shell:   egrep '(\\v|\\r|\\m|\\s)' /etc/issue.net
    register: check_issuenet
    ignore_errors: yes

  - name: reconfigure /etc/issue.net
    shell: echo "All activities performed on this system will be monitored." > /etc/issue.net
    when: check_issuenet.stdout != ""


  - name: setting required permission on /etc/motd
    copy:
     src: /etc/motd
     dest:  /usr/share/cis
     force: no
  - file:
      path: /etc/motd
      owner: root
      group: root
      mode: '644'

  - name: setting required permission on /etc/issue
    file:
      path: /etc/issue
      owner: root
      group: root
      mode: '644'


  - name: setting required permission on /etc/issue.net
    file:
      path: /etc/issue.net
      owner: root
      group: root
      mode: '644'


  - name: check gdm installed
    shell:   yum list installed | grep GDM
    register: check_gdm
    ignore_errors: yes


  - name: reconfigure /etc/dconf/profile/gdm
    copy:
     src: /etc/dconf/profile/gdm
     dest: /usr/share/cis
     force: no
     remote_src: yes
    when: check_gdm.stdout != ""
  - blockinfile:
      path: /etc/dconf/profile/gdm
      insertafter:
      content: |
         user-db:user
         system-db:gdm
         file-db:/usr/share/gdm/greeter-dconf-defaults
    when: check_gdm.stdout != ""


  - name: reconfigure /etc/dconf/db/gdm.d/*
    copy:
     src: /etc/dconf/db/gdm.d
     dest: /usr/share/cis
     force: no
    when: check_gdm.stdout != ""
  - blockinfile:
      path: /etc/dconf/db/gdm.d/*
      insertafter:
      content: |
          [org/gnome/login-screen]
          banner-message-enable=true
          banner-message-text='Authorized uses only. All activity may be monitored and
    when: check_gdm.stdout != ""


  - name: update system db
    shell:  dconf update
    when: check_gdm.stdout != ""

  - name: update security packages
    shell: yum update --security -y


  - name: motd
    copy:
     src: /etc/motd
     remote_src: yes
     dest: /usr/share/cis
     force: no

  - name: change motd
    copy:
     content: "All activities performed on this system will be monitored."
     dest: /etc/motd

  - name: mail transfer agent local mode only
    shell: cat /etc/postfix/main.cf | grep '^inet_interfaces = loopback_only'
    register: postfix_result
    ignore_errors: yes

  - debug:
      var: postfix_result

  - name: copy postifx config file
    copy:
     src: /etc/postfix/main.cf
     remote_src: yes
     dest: /usr/share/cis
     force: no
  - name: replace line in postfix
    replace:
     path: /etc/postfix/main.cf
     regexp: '^inet_interfaces = localhost'
     replace: 'inet_interfaces = loopback_only'
     backup: yes
    
  - name: copy rsyslog.conf
    copy:
     src: /etc/rsyslog.conf
     remote_src: yes
     dest: /usr/share/cis
     force: no

  - name: check FileCreateMode
    shell: grep '^$FileCreateMode 0640' /etc/rsyslog.conf
    register: Filecreate_check
    ignore_errors: yes

  - name: set FileCreateMode
    lineinfile:
     path: /etc/rsyslog.conf
     line: '$FileCreateMode 0640'
     insertafter: yes
     state: present
    when: Filecreate_check.stdout == ''

